# ===============================================
# CONFIGURAÇÃO COMPLETA DO SISTEMA
# ===============================================
# 
# Este arquivo contém TODAS as variáveis de ambiente necessárias
# para o funcionamento completo do sistema, incluindo:
# - Firebase (Frontend e Backend)
# - Banco de Dados
# - Autenticação
# - APIs de Pagamento
# - Configurações do Servidor
# 
# IMPORTANTE: Copie este arquivo para .env e preencha com seus valores
# 
# ===============================================

# ===============================================
# CONFIGURAÇÃO DO SERVIDOR
# ===============================================

# Porta do servidor (padrão: 5000)
PORT=5000

# Ambiente de execução (development | production)
NODE_ENV=development

# URL base da aplicação
APP_URL=http://localhost:5000

# ===============================================
# BANCO DE DADOS (PostgreSQL)
# ===============================================

# URL de conexão com o banco de dados
# Formato: postgresql://usuario:senha@host:porta/database
DATABASE_URL=postgresql://usuario:senha@localhost:5432/radioplay_db

# Pool de conexões do banco
DB_MAX_CONNECTIONS=20
DB_IDLE_TIMEOUT=30000

# ===============================================
# SESSÃO E AUTENTICAÇÃO
# ===============================================

# Chave secreta para sessões (mínimo 32 caracteres)
# IMPORTANTE: Use uma chave forte e aleatória em produção!
SESSION_SECRET=sua-chave-secreta-super-segura-aqui-min-32-chars

# Configurações de cookie de sessão
SESSION_COOKIE_NAME=radioplay_session
SESSION_COOKIE_MAX_AGE=604800000  # 7 dias em ms
SESSION_COOKIE_SECURE=false       # true em produção com HTTPS
SESSION_COOKIE_HTTP_ONLY=true
SESSION_COOKIE_SAME_SITE=lax

# ===============================================
# FIREBASE - FRONTEND (CLIENT)
# ===============================================
# 
# Estas variáveis são usadas pelo cliente (navegador)
# Todas começam com VITE_ para serem expostas ao frontend
# 
# Como obter:
# 1. Acesse https://console.firebase.google.com
# 2. Selecione seu projeto
# 3. Configurações do Projeto > Geral > Seus aplicativos > Web
# 

# API Key do Firebase
# Exemplo: AIzaSyDn5HGLKvDrP_6Y8jOBq3z9Qx2bC3kE4fG
VITE_FIREBASE_API_KEY=sua-api-key-aqui

# Domínio de Autenticação
# Formato: [seu-projeto].firebaseapp.com
VITE_FIREBASE_AUTH_DOMAIN=seu-projeto.firebaseapp.com

# ID do Projeto Firebase
VITE_FIREBASE_PROJECT_ID=seu-projeto-id

# Storage Bucket
# Formato: [seu-projeto].appspot.com
VITE_FIREBASE_STORAGE_BUCKET=seu-projeto.appspot.com

# ID do Remetente de Mensagens (Sender ID)
# Número de 12 dígitos
VITE_FIREBASE_MESSAGING_SENDER_ID=123456789012

# ID do Aplicativo
# Formato: 1:sender_id:web:unique_string
VITE_FIREBASE_APP_ID=1:123456789012:web:abc123def456

# ID de Medição (opcional - Google Analytics)
# Formato: G-XXXXXXXXXX
VITE_FIREBASE_MEASUREMENT_ID=G-XXXXXXXXXX

# VAPID Key para Web Push
# Como obter:
# 1. Firebase Console > Cloud Messaging
# 2. Web configuration > Web Push certificates
# 3. Generate key pair
# Exemplo: BKagOny0KF_2sYPPiK...
VITE_FIREBASE_VAPID_KEY=sua-vapid-key-aqui

# ===============================================
# FIREBASE - BACKEND (ADMIN SDK)
# ===============================================
# 
# Estas variáveis são usadas pelo servidor Node.js
# para enviar notificações push
# 
# Como obter:
# 1. Firebase Console > Configurações do Projeto
# 2. Service accounts > Gerar nova chave privada
# 3. Baixe o arquivo JSON e extraia os valores
# 

# Opção 1: Usar arquivo JSON completo (recomendado)
# Coloque o caminho para o arquivo JSON do service account
# GOOGLE_APPLICATION_CREDENTIALS=./path/to/serviceAccountKey.json

# Opção 2: Variáveis individuais
# ID do Projeto (mesmo do frontend)
FIREBASE_PROJECT_ID=seu-projeto-id

# Email do Service Account
# Formato: firebase-adminsdk-xxxxx@projeto.iam.gserviceaccount.com
FIREBASE_CLIENT_EMAIL=firebase-adminsdk-xxxxx@seu-projeto.iam.gserviceaccount.com

# Chave Privada do Service Account
# IMPORTANTE: Mantenha as quebras de linha (\n)
# Copie exatamente como está no arquivo JSON
FIREBASE_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBg...\n-----END PRIVATE KEY-----\n"

# ===============================================
# APIs DE PAGAMENTO
# ===============================================

# OrinPay API (PIX)
# Documentação: https://docs.orinpay.com
ORINPAY_API_KEY=sk-sua-chave-api-orinpay
ORINPAY_API_URL=https://api.orinpay.com/v1
ORINPAY_WEBHOOK_SECRET=whsec_sua-chave-webhook

# LiraPay API (Alternativa)
# Documentação: https://docs.lirapay.com
LIRAPAY_API_KEY=sua-chave-api-lirapay
LIRAPAY_API_URL=https://api.lirapay.com/v1
LIRAPAY_WEBHOOK_SECRET=sua-chave-webhook-lirapay

# ===============================================
# CONFIGURAÇÕES DE SEGURANÇA
# ===============================================

# Taxa limite de requisições (requests por minuto)
RATE_LIMIT_WINDOW_MS=60000
RATE_LIMIT_MAX_REQUESTS=100

# CORS - Origens permitidas (separadas por vírgula)
CORS_ORIGINS=http://localhost:5000,http://localhost:3000

# Tamanho máximo de upload (em MB)
MAX_UPLOAD_SIZE_MB=10

# ===============================================
# LOGS E MONITORAMENTO
# ===============================================

# Nível de log (error | warn | info | debug)
LOG_LEVEL=info

# Diretório de logs
LOG_DIR=./logs

# Rotação de logs
LOG_MAX_SIZE=10M
LOG_MAX_FILES=7d

# ===============================================
# EMAIL (Opcional)
# ===============================================

# Configurações SMTP para envio de emails
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=seu-email@gmail.com
SMTP_PASS=sua-senha-de-app

# Email de remetente padrão
EMAIL_FROM="RádioPlay <noreply@radioplay.com>"

# ===============================================
# ANALYTICS E TRACKING (Opcional)
# ===============================================

# Google Analytics
GA_TRACKING_ID=UA-XXXXXXXXX-X

# Facebook Pixel
FB_PIXEL_ID=1234567890

# ===============================================
# CONFIGURAÇÕES DE DESENVOLVIMENTO
# ===============================================

# Mostrar erros detalhados (apenas em desenvolvimento)
SHOW_DETAILED_ERRORS=true

# Habilitar hot reload
HOT_RELOAD=true

# Proxy para desenvolvimento (se necessário)
DEV_PROXY_TARGET=http://localhost:3001

# ===============================================
# CONFIGURAÇÕES DE PRODUÇÃO
# ===============================================

# Domínio em produção
PRODUCTION_DOMAIN=radioplay.com.br

# CDN para assets estáticos
CDN_URL=https://cdn.radioplay.com.br

# Certificado SSL (para HTTPS)
SSL_CERT_PATH=/etc/ssl/certs/radioplay.crt
SSL_KEY_PATH=/etc/ssl/private/radioplay.key

# ===============================================
# REDIS (Opcional - para cache e filas)
# ===============================================

# URL de conexão do Redis
REDIS_URL=redis://localhost:6379

# Senha do Redis (se configurada)
REDIS_PASSWORD=

# TTL padrão do cache (em segundos)
CACHE_TTL=3600

# ===============================================
# WORKERS E JOBS (Opcional)
# ===============================================

# Número de workers
WORKER_CONCURRENCY=2

# Fila de jobs
JOB_QUEUE_NAME=radioplay-jobs

# Retry de jobs falhados
JOB_MAX_RETRIES=3
JOB_RETRY_DELAY=5000

# ===============================================
# EXEMPLO DE USO
# ===============================================
# 
# 1. Copie este arquivo:
#    cp .env.example .env
# 
# 2. Edite o arquivo .env com seus valores reais
# 
# 3. NUNCA commite o arquivo .env no Git!
#    Certifique-se de que .env está no .gitignore
# 
# 4. Em produção, use variáveis de ambiente do sistema
#    ou um gerenciador de secrets como:
#    - AWS Secrets Manager
#    - Google Secret Manager
#    - HashiCorp Vault
#    - Railway/Vercel/Heroku Environment Variables
# 
# ===============================================

# ===============================================
# VALIDAÇÃO DE CONFIGURAÇÃO
# ===============================================
# 
# Para validar se todas as variáveis estão configuradas:
# 
# npm run validate:env
# 
# Este comando verificará:
# - Variáveis obrigatórias estão definidas
# - Formatos estão corretos
# - Conexões com serviços externos funcionam
# 
# ===============================================